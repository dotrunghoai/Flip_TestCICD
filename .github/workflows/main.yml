name: CI-CD
run-name: Run Unit Test | on ${{ github.ref_name }} branch | by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      isRelease:
        type: boolean
        description: is Release to TestFlight

jobs:
  test:
    name: Test
    runs-on: macos-latest
    strategy:
      matrix:
        destination: ['platform=iOS Simulator,OS=16.2,name=iPhone 14 Pro Max']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run SwiftLint
        run: echo SwiftLint running...
      - name: Carthage Update
        continue-on-error: true
        run: carthage update --platform iOS --no-use-binaries --use-xcframeworks
      - name: Run Script Build Carthage
        run: bash carthage-build.sh build --platform iOS --use-xcframeworks
      - name: Build
        run: xcodebuild clean build -workspace Flip.xcworkspace -scheme "FlipMobile Debug" -destination "${destination}" CODE_SIGN_IDENTITY="" ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO
        env:
          destination: ${{ matrix.destination }}
      - name: ScreenshareCoreTests
        run: xcodebuild clean test -workspace Flip.xcworkspace -scheme "ScreenshareCoreTests" -destination "${destination}" CODE_SIGN_IDENTITY="" ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO
        env:
          destination: ${{ matrix.destination }}
      - name: FlipMobileTests
        run: xcodebuild clean test -workspace Flip.xcworkspace -scheme "FlipMobileTests" -destination "${destination}" CODE_SIGN_IDENTITY="" ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO
        env:
          destination: ${{ matrix.destination }}
      - name: CommonCoreTests
        run: xcodebuild clean test -workspace Flip.xcworkspace -scheme "CommonCoreTests" -destination "${destination}" CODE_SIGN_IDENTITY="" ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO
        env:
          destination: ${{ matrix.destination }}
      - name: ToMobileCoreTests
        run: xcodebuild clean test -workspace Flip.xcworkspace -scheme "ToMobileCoreTests" -destination "${destination}" CODE_SIGN_IDENTITY="" ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO
        env:
          destination: ${{ matrix.destination }}
      - name: Archive
        if: ${{ inputs.isRelease }}
        run: echo ${{ inputs.isRelease }}
